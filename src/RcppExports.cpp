// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// log_likelihood_ind
arma::vec log_likelihood_ind(arma::vec tau, arma::mat mu, arma::mat b, arma::vec delta, arma::uvec cens, arma::umat D);
RcppExport SEXP _lddmm_log_likelihood_ind(SEXP tauSEXP, SEXP muSEXP, SEXP bSEXP, SEXP deltaSEXP, SEXP censSEXP, SEXP DSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mu(muSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type b(bSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type cens(censSEXP);
    Rcpp::traits::input_parameter< arma::umat >::type D(DSEXP);
    rcpp_result_gen = Rcpp::wrap(log_likelihood_ind(tau, mu, b, delta, cens, D));
    return rcpp_result_gen;
END_RCPP
}
// log_likelihood
double log_likelihood(arma::vec tau, arma::mat mu, arma::mat b, arma::vec delta, arma::uvec cens, arma::umat D, bool log);
RcppExport SEXP _lddmm_log_likelihood(SEXP tauSEXP, SEXP muSEXP, SEXP bSEXP, SEXP deltaSEXP, SEXP censSEXP, SEXP DSEXP, SEXP logSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mu(muSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type b(bSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type cens(censSEXP);
    Rcpp::traits::input_parameter< arma::umat >::type D(DSEXP);
    Rcpp::traits::input_parameter< bool >::type log(logSEXP);
    rcpp_result_gen = Rcpp::wrap(log_likelihood(tau, mu, b, delta, cens, D, log));
    return rcpp_result_gen;
END_RCPP
}
// table_int
arma::uvec table_int(arma::uvec x, unsigned int K);
RcppExport SEXP _lddmm_table_int(SEXP xSEXP, SEXP KSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::uvec >::type x(xSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type K(KSEXP);
    rcpp_result_gen = Rcpp::wrap(table_int(x, K));
    return rcpp_result_gen;
END_RCPP
}
// sum_rows_log
arma::vec sum_rows_log(arma::mat Q);
RcppExport SEXP _lddmm_sum_rows_log(SEXP QSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Q(QSEXP);
    rcpp_result_gen = Rcpp::wrap(sum_rows_log(Q));
    return rcpp_result_gen;
END_RCPP
}
// normalise_log
arma::vec normalise_log(arma::vec x);
RcppExport SEXP _lddmm_normalise_log(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(normalise_log(x));
    return rcpp_result_gen;
END_RCPP
}
// rdirichlet
arma::vec rdirichlet(arma::vec deltas);
RcppExport SEXP _lddmm_rdirichlet(SEXP deltasSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type deltas(deltasSEXP);
    rcpp_result_gen = Rcpp::wrap(rdirichlet(deltas));
    return rcpp_result_gen;
END_RCPP
}
// count_assign
arma::umat count_assign(arma::umat z, unsigned int M);
RcppExport SEXP _lddmm_count_assign(SEXP zSEXP, SEXP MSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::umat >::type z(zSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type M(MSEXP);
    rcpp_result_gen = Rcpp::wrap(count_assign(z, M));
    return rcpp_result_gen;
END_RCPP
}
// sample_reff_mu
Rcpp::List sample_reff_mu(arma::vec tau, arma::umat D, arma::uvec cens, arma::mat beta_u_old, arma::vec delta_dat, arma::mat b_dat, arma::mat B_beta_dat, arma::mat mu_dat_old, arma::mat B, arma::mat P, arma::uvec ind, arma::uvec time, double sigma2_us, double sigma2_ua, arma::mat sd_beta_u, arma::mat acc_beta_u);
RcppExport SEXP _lddmm_sample_reff_mu(SEXP tauSEXP, SEXP DSEXP, SEXP censSEXP, SEXP beta_u_oldSEXP, SEXP delta_datSEXP, SEXP b_datSEXP, SEXP B_beta_datSEXP, SEXP mu_dat_oldSEXP, SEXP BSEXP, SEXP PSEXP, SEXP indSEXP, SEXP timeSEXP, SEXP sigma2_usSEXP, SEXP sigma2_uaSEXP, SEXP sd_beta_uSEXP, SEXP acc_beta_uSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< arma::umat >::type D(DSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type cens(censSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type beta_u_old(beta_u_oldSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type delta_dat(delta_datSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type b_dat(b_datSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type B_beta_dat(B_beta_datSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mu_dat_old(mu_dat_oldSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type B(BSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type P(PSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type ind(indSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type time(timeSEXP);
    Rcpp::traits::input_parameter< double >::type sigma2_us(sigma2_usSEXP);
    Rcpp::traits::input_parameter< double >::type sigma2_ua(sigma2_uaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type sd_beta_u(sd_beta_uSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type acc_beta_u(acc_beta_uSEXP);
    rcpp_result_gen = Rcpp::wrap(sample_reff_mu(tau, D, cens, beta_u_old, delta_dat, b_dat, B_beta_dat, mu_dat_old, B, P, ind, time, sigma2_us, sigma2_ua, sd_beta_u, acc_beta_u));
    return rcpp_result_gen;
END_RCPP
}
// sample_reff_b
Rcpp::List sample_reff_b(arma::vec tau, arma::umat D, arma::uvec cens, arma::mat beta_u_old, arma::vec delta_dat, arma::mat B_beta_dat, arma::mat b_dat_old, arma::mat mu_dat, arma::mat B, arma::mat P, arma::uvec ind, arma::uvec time, double sigma2_us, double sigma2_ua, arma::mat sd_beta_u, arma::mat acc_beta_u);
RcppExport SEXP _lddmm_sample_reff_b(SEXP tauSEXP, SEXP DSEXP, SEXP censSEXP, SEXP beta_u_oldSEXP, SEXP delta_datSEXP, SEXP B_beta_datSEXP, SEXP b_dat_oldSEXP, SEXP mu_datSEXP, SEXP BSEXP, SEXP PSEXP, SEXP indSEXP, SEXP timeSEXP, SEXP sigma2_usSEXP, SEXP sigma2_uaSEXP, SEXP sd_beta_uSEXP, SEXP acc_beta_uSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< arma::umat >::type D(DSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type cens(censSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type beta_u_old(beta_u_oldSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type delta_dat(delta_datSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type B_beta_dat(B_beta_datSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type b_dat_old(b_dat_oldSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type mu_dat(mu_datSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type B(BSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type P(PSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type ind(indSEXP);
    Rcpp::traits::input_parameter< arma::uvec >::type time(timeSEXP);
    Rcpp::traits::input_parameter< double >::type sigma2_us(sigma2_usSEXP);
    Rcpp::traits::input_parameter< double >::type sigma2_ua(sigma2_uaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type sd_beta_u(sd_beta_uSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type acc_beta_u(acc_beta_uSEXP);
    rcpp_result_gen = Rcpp::wrap(sample_reff_b(tau, D, cens, beta_u_old, delta_dat, B_beta_dat, b_dat_old, mu_dat, B, P, ind, time, sigma2_us, sigma2_ua, sd_beta_u, acc_beta_u));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_lddmm_log_likelihood_ind", (DL_FUNC) &_lddmm_log_likelihood_ind, 6},
    {"_lddmm_log_likelihood", (DL_FUNC) &_lddmm_log_likelihood, 7},
    {"_lddmm_table_int", (DL_FUNC) &_lddmm_table_int, 2},
    {"_lddmm_sum_rows_log", (DL_FUNC) &_lddmm_sum_rows_log, 1},
    {"_lddmm_normalise_log", (DL_FUNC) &_lddmm_normalise_log, 1},
    {"_lddmm_rdirichlet", (DL_FUNC) &_lddmm_rdirichlet, 1},
    {"_lddmm_count_assign", (DL_FUNC) &_lddmm_count_assign, 2},
    {"_lddmm_sample_reff_mu", (DL_FUNC) &_lddmm_sample_reff_mu, 16},
    {"_lddmm_sample_reff_b", (DL_FUNC) &_lddmm_sample_reff_b, 16},
    {NULL, NULL, 0}
};

RcppExport void R_init_lddmm(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
